<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"
  xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
  <channel>
    <title>sunu's weblog</title>
    <link>sunu.in</link>
    <description>On programming and stuff.</description>
    <pubDate>Wed, 29 Jul 2015 00:59:30 +0000</pubDate>
    <item>
      <title>And now the summer has ended.</title>
      <link>sunu.in/and-now-the-summer-has-ended</link>
      <description>&lt;p&gt;So the end is here. 24th August was the &amp;quot;hard pencil down&amp;quot; date of GSoC 2015. And with that GSoC has come to an end.&lt;/p&gt;
</description>
      <pubDate>Wed, 29 Jul 2015 00:59:30 +0000</pubDate>
      <dc:date>2015-07-29T00:59:30+00:00</dc:date>
    </item>
    <item>
      <title>Summer of Code Update</title>
      <link>sunu.in/summer-of-code-update-3</link>
      <description>&lt;p&gt;Time for a short GSoC update.&lt;/p&gt;
</description>
      <pubDate>Tue, 28 Jul 2015 20:17:30 +0000</pubDate>
      <dc:date>2015-07-28T20:17:30+00:00</dc:date>
    </item>
    <item>
      <title>I'm porting stuff to Python 3. And I'm loving it.</title>
      <link>sunu.in/im-porting-stuff-to-python-3-and-im-loving-it</link>
      <description>&lt;p&gt;GSoC update time! In case you didn&amp;#39;t read my previous post, I&amp;#39;m &lt;a href=&quot;http://sunu.in/on-summer-of-code/&quot;&gt;participating in GSoC&lt;/a&gt; and porting &lt;a href=&quot;https://github.com/scrapinghub/splash&quot;&gt;Splash&lt;/a&gt; to Python 3.&lt;/p&gt;
</description>
      <pubDate>Sat, 20 Jun 2015 14:09:04 +0000</pubDate>
      <dc:date>2015-06-20T14:09:04+00:00</dc:date>
    </item>
    <item>
      <title>On Summer of Code</title>
      <link>sunu.in/on-summer-of-code</link>
      <description>&lt;p&gt;Bit of a late news, but yes, I am participating in &lt;a href=&quot;https://www.google-melange.com/gsoc/homepage/google/gsoc2015&quot;&gt;Google Summer of Code 2015&lt;/a&gt; under &lt;a href=&quot;https://www.python.org/psf/&quot;&gt;Python Software Foundation&lt;/a&gt;. I am working on &lt;a href=&quot;https://github.com/scrapinghub/splash&quot;&gt;Splash&lt;/a&gt; developed by &lt;a href=&quot;http://scrapinghub.com/&quot;&gt;Scrapinghub&lt;/a&gt;.&lt;/p&gt;
</description>
      <pubDate>Tue, 02 Jun 2015 11:52:44 +0000</pubDate>
      <dc:date>2015-06-02T11:52:44+00:00</dc:date>
    </item>
    <item>
      <title>Manipulating http traffic with mitmproxy.</title>
      <link>sunu.in/manipulating-internet-traffic-with-mitmproxy</link>
      <description>&lt;p&gt;&lt;a href=&quot;https://github.com/mitmproxy/mitmproxy&quot;&gt;Mitmproxy&lt;/a&gt; is a nifty little tool that lets us intercept and manipulate http (and https) traffic on the fly. It&amp;#39;s a man-in-the-middle proxy with both a commandline interface and a web interface to inspect, record and manipulate the http traffic. I have been playing with it this evening and I&amp;#39;ll try to share whatever I have found out till now.&lt;/p&gt;
</description>
      <pubDate>Fri, 06 Mar 2015 13:34:00 +0000</pubDate>
      <dc:date>2015-03-06T13:34:00+00:00</dc:date>
    </item>
    <item>
      <title>HTTPS - Under the hood.</title>
      <link>sunu.in/https-under-the-hood</link>
      <description>&lt;p&gt;While browsing the web we often see a padlock symbol and the letters &lt;code&gt;https&lt;/code&gt; before the web address. When we click on the padlock, the browser assures us that our connection to the website is secure and gives us some info about who runs the website and stuff like that.&lt;/p&gt;
</description>
      <pubDate>Mon, 22 Dec 2014 16:09:30 +0000</pubDate>
      <dc:date>2014-12-22T16:09:30+00:00</dc:date>
    </item>
    <item>
      <title>The curious case of mutable default arguments in Python</title>
      <link>sunu.in/the-curious-case-of-mutable-default-arguments-in-python</link>
      <description>&lt;p&gt;Python&amp;#39;s handing of default arguments trips up most Pythonistas at some point in their journey. Sometimes it makes people pull out their hair in frustration because they can&amp;#39;t figure out what&amp;#39;s wrong.&lt;/p&gt;
</description>
      <pubDate>Tue, 25 Nov 2014 09:12:00 +0000</pubDate>
      <dc:date>2014-11-25T09:12:00+00:00</dc:date>
    </item>
    <item>
      <title>Using Bower with Flask.</title>
      <link>sunu.in/using-bower-with-flask</link>
      <description>&lt;p&gt;&lt;a href=&quot;http://bower.io/&quot;&gt;Bower&lt;/a&gt; is a package manager that fetches and installs all kinds of static resources and tools. So it is very useful for managing the static resources for our Flask project. We just put our requirements in a file called &lt;code&gt;bower.json&lt;/code&gt; and Bower fetches all those requirements for us and puts them in a directory called &lt;code&gt;bower_components&lt;/code&gt;.
Then we use something like &lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; to move the static resources to their final location.&lt;/p&gt;
</description>
      <pubDate>Sat, 15 Nov 2014 09:12:00 +0000</pubDate>
      <dc:date>2014-11-15T09:12:00+00:00</dc:date>
    </item>
    <item>
      <title>Protect your secrets!</title>
      <link>sunu.in/protect-your-secret</link>
      <description>&lt;p&gt;Django has a SECRET_KEY settings among many others. This SECRET_KEY is really important for security purposes as it is used for cryptographic signing functionality in Django (&lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/signing/&quot;&gt;More&lt;/a&gt; about cryptographic signing). We are expected to keep the value secret. Running Django with a known SECRET_KEY defeats many of Djangoâ€™s security protections, and can lead to privilege escalation and remote code execution vulnerabilities.&lt;/p&gt;
</description>
      <pubDate>Sat, 29 Mar 2014 17:52:00 +0000</pubDate>
      <dc:date>2014-03-29T17:52:00+00:00</dc:date>
    </item>
    <dc:date>2015-07-29T00:59:30+00:00</dc:date>
  </channel>
</rss>