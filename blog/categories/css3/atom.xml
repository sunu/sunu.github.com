<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: CSS3 | tarashish dot com]]></title>
  <link href="http://sunu.github.com/blog/categories/css3/atom.xml" rel="self"/>
  <link href="http://sunu.github.com/"/>
  <updated>2012-08-05T21:54:13+05:30</updated>
  <id>http://sunu.github.com/</id>
  <author>
    <name><![CDATA[Tarashish Mishra]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sample Post : A Sample Post for Octropress]]></title>
    <link href="http://sunu.github.com/blog/2012/08/05/sample-post-a-sample-post-for-octropress/"/>
    <updated>2012-08-05T13:07:00+05:30</updated>
    <id>http://sunu.github.com/blog/2012/08/05/sample-post-a-sample-post-for-octropress</id>
    <content type="html"><![CDATA[<p>They are not terribly different looking, it's true, but we also want them to be recognizable as a family of sites.</p>

<p>We're working with two amazing designers, Jin Yang and Nathan Bowers, who are helping us whip the CSS and HTML into shape so they can produce a set of about 10 different Zen Garden designs. As new sites in our network get democracied into being, these designs will be used as a palette for the community to choose from. (And, later, the community will decide on a domain name and logo as well.)</p>

<p>Anyway, I bring this up not because my pokemans, let me show you them, but because I have to personally maintain four different CSS files. And that number is only going to get larger. Much larger. That scares me a little.</p>

<p>Most of all, what I've learned from this exercise in site theming is that CSS is kind of painful. I fully support CSS as a (mostly) functional user interface Model-View-Controller. But even if you have extreme HTML hygiene and Austrian levels of discipline, CSS has some serious limitations in practice.</p>

<p>Things in particular that bite us a lot:</p>

<p>Vertical alignment is a giant, hacky PITA. (Tables work great for this though!)
Lack of variables so we have to repeat colors all over the place.
Lack of nesting so we have to repeat huge blocks of CSS all over the place.
In short, CSS violates the living crap out of the DRY principle. You are constantly and unavoidably repeating yourself.</p>

<p>That's why I'm so intrigued by two Ruby gems that attempt to directly address the deficiencies of CSS.</p>
]]></content>
  </entry>
  
</feed>
